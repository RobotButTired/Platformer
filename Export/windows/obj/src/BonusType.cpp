// Generated by Haxe 4.0.1
#include <hxcpp.h>

#ifndef INCLUDED_BonusType
#include <BonusType.h>
#endif

::BonusType BonusType_obj::destroy;

::BonusType BonusType_obj::slow;

bool BonusType_obj::__GetStatic(const ::String &inName, ::Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	if (inName==HX_("destroy",fa,2c,86,24)) { outValue = BonusType_obj::destroy; return true; }
	if (inName==HX_("slow",01,de,55,4c)) { outValue = BonusType_obj::slow; return true; }
	return super::__GetStatic(inName, outValue, inCallProp);
}

HX_DEFINE_CREATE_ENUM(BonusType_obj)

int BonusType_obj::__FindIndex(::String inName)
{
	if (inName==HX_("destroy",fa,2c,86,24)) return 1;
	if (inName==HX_("slow",01,de,55,4c)) return 0;
	return super::__FindIndex(inName);
}

int BonusType_obj::__FindArgCount(::String inName)
{
	if (inName==HX_("destroy",fa,2c,86,24)) return 0;
	if (inName==HX_("slow",01,de,55,4c)) return 0;
	return super::__FindArgCount(inName);
}

hx::Val BonusType_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	if (inName==HX_("destroy",fa,2c,86,24)) return destroy;
	if (inName==HX_("slow",01,de,55,4c)) return slow;
	return super::__Field(inName,inCallProp);
}

static ::String BonusType_obj_sStaticFields[] = {
	HX_("slow",01,de,55,4c),
	HX_("destroy",fa,2c,86,24),
	::String(null())
};

hx::Class BonusType_obj::__mClass;

Dynamic __Create_BonusType_obj() { return new BonusType_obj; }

void BonusType_obj::__register()
{

hx::Static(__mClass) = hx::_hx_RegisterClass(HX_("BonusType",d9,a0,0d,44), hx::TCanCast< BonusType_obj >,BonusType_obj_sStaticFields,0,
	&__Create_BonusType_obj, &__Create,
	&super::__SGetClass(), &CreateBonusType_obj, 0
#ifdef HXCPP_VISIT_ALLOCS
    , 0
#endif
#ifdef HXCPP_SCRIPTABLE
    , 0
#endif
);
	__mClass->mGetStaticField = &BonusType_obj::__GetStatic;
}

void BonusType_obj::__boot()
{
destroy = hx::CreateConstEnum< BonusType_obj >(HX_("destroy",fa,2c,86,24),1);
slow = hx::CreateConstEnum< BonusType_obj >(HX_("slow",01,de,55,4c),0);
}


