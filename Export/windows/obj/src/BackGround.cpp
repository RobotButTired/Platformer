// Generated by Haxe 4.0.1
#include <hxcpp.h>

#ifndef INCLUDED_BackGround
#include <BackGround.h>
#endif
#ifndef INCLUDED_openfl_display_Bitmap
#include <openfl/display/Bitmap.h>
#endif
#ifndef INCLUDED_openfl_display_BitmapData
#include <openfl/display/BitmapData.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObject
#include <openfl/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObjectContainer
#include <openfl/display/DisplayObjectContainer.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_display_InteractiveObject
#include <openfl/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_openfl_display_Sprite
#include <openfl/display/Sprite.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_utils_Assets
#include <openfl/utils/Assets.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_53014b422241c3b6_11_new,"BackGround","new",0xa9035c20,"BackGround.new","BackGround.hx",11,0x7b978750)

void BackGround_obj::__construct(::String name){
            	HX_GC_STACKFRAME(&_hx_pos_53014b422241c3b6_11_new)
HXLINE(  12)		super::__construct();
HXLINE(  13)		this->bmp =  ::openfl::display::Bitmap_obj::__alloc( HX_CTX ,::openfl::utils::Assets_obj::getBitmapData(((HX_("assets/backGround/",95,a5,89,ac) + name) + HX_(".png",3b,2d,bd,1e)),null()),null(),null());
HXLINE(  14)		this->addChild(this->bmp);
            	}

Dynamic BackGround_obj::__CreateEmpty() { return new BackGround_obj; }

void *BackGround_obj::_hx_vtable = 0;

Dynamic BackGround_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< BackGround_obj > _hx_result = new BackGround_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool BackGround_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x19c29573) {
		if (inClassId<=(int)0x17120186) {
			if (inClassId<=(int)0x0ddfced7) {
				return inClassId==(int)0x00000001 || inClassId==(int)0x0ddfced7;
			} else {
				return inClassId==(int)0x17120186;
			}
		} else {
			return inClassId==(int)0x19c29573;
		}
	} else {
		if (inClassId<=(int)0x3f2b00af) {
			return inClassId==(int)0x1b123bf8 || inClassId==(int)0x3f2b00af;
		} else {
			return inClassId==(int)0x51630c2e;
		}
	}
}


hx::ObjectPtr< BackGround_obj > BackGround_obj::__new(::String name) {
	hx::ObjectPtr< BackGround_obj > __this = new BackGround_obj();
	__this->__construct(name);
	return __this;
}

hx::ObjectPtr< BackGround_obj > BackGround_obj::__alloc(hx::Ctx *_hx_ctx,::String name) {
	BackGround_obj *__this = (BackGround_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(BackGround_obj), true, "BackGround"));
	*(void **)__this = BackGround_obj::_hx_vtable;
	__this->__construct(name);
	return __this;
}

BackGround_obj::BackGround_obj()
{
}

void BackGround_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(BackGround);
	HX_MARK_MEMBER_NAME(bmp,"bmp");
	 ::openfl::display::Sprite_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void BackGround_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(bmp,"bmp");
	 ::openfl::display::Sprite_obj::__Visit(HX_VISIT_ARG);
}

hx::Val BackGround_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"bmp") ) { return hx::Val( bmp ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val BackGround_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"bmp") ) { bmp=inValue.Cast<  ::openfl::display::Bitmap >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void BackGround_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("bmp",45,bc,4a,00));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo BackGround_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*  ::openfl::display::Bitmap */ ,(int)offsetof(BackGround_obj,bmp),HX_("bmp",45,bc,4a,00)},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *BackGround_obj_sStaticStorageInfo = 0;
#endif

static ::String BackGround_obj_sMemberFields[] = {
	HX_("bmp",45,bc,4a,00),
	::String(null()) };

hx::Class BackGround_obj::__mClass;

void BackGround_obj::__register()
{
	BackGround_obj _hx_dummy;
	BackGround_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("BackGround",2e,0c,63,51);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(BackGround_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< BackGround_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = BackGround_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = BackGround_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

