// Generated by Haxe 4.0.1
#include <hxcpp.h>

#ifndef INCLUDED_State
#include <State.h>
#endif

::State State_obj::idle;

::State State_obj::jump;

::State State_obj::walk;

bool State_obj::__GetStatic(const ::String &inName, ::Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	if (inName==HX_("idle",14,a7,b3,45)) { outValue = State_obj::idle; return true; }
	if (inName==HX_("jump",ee,c4,69,46)) { outValue = State_obj::jump; return true; }
	if (inName==HX_("walk",09,5d,f2,4e)) { outValue = State_obj::walk; return true; }
	return super::__GetStatic(inName, outValue, inCallProp);
}

HX_DEFINE_CREATE_ENUM(State_obj)

int State_obj::__FindIndex(::String inName)
{
	if (inName==HX_("idle",14,a7,b3,45)) return 0;
	if (inName==HX_("jump",ee,c4,69,46)) return 2;
	if (inName==HX_("walk",09,5d,f2,4e)) return 1;
	return super::__FindIndex(inName);
}

int State_obj::__FindArgCount(::String inName)
{
	if (inName==HX_("idle",14,a7,b3,45)) return 0;
	if (inName==HX_("jump",ee,c4,69,46)) return 0;
	if (inName==HX_("walk",09,5d,f2,4e)) return 0;
	return super::__FindArgCount(inName);
}

hx::Val State_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	if (inName==HX_("idle",14,a7,b3,45)) return idle;
	if (inName==HX_("jump",ee,c4,69,46)) return jump;
	if (inName==HX_("walk",09,5d,f2,4e)) return walk;
	return super::__Field(inName,inCallProp);
}

static ::String State_obj_sStaticFields[] = {
	HX_("idle",14,a7,b3,45),
	HX_("walk",09,5d,f2,4e),
	HX_("jump",ee,c4,69,46),
	::String(null())
};

hx::Class State_obj::__mClass;

Dynamic __Create_State_obj() { return new State_obj; }

void State_obj::__register()
{

hx::Static(__mClass) = hx::_hx_RegisterClass(HX_("State",f1,e5,38,17), hx::TCanCast< State_obj >,State_obj_sStaticFields,0,
	&__Create_State_obj, &__Create,
	&super::__SGetClass(), &CreateState_obj, 0
#ifdef HXCPP_VISIT_ALLOCS
    , 0
#endif
#ifdef HXCPP_SCRIPTABLE
    , 0
#endif
);
	__mClass->mGetStaticField = &State_obj::__GetStatic;
}

void State_obj::__boot()
{
idle = hx::CreateConstEnum< State_obj >(HX_("idle",14,a7,b3,45),0);
jump = hx::CreateConstEnum< State_obj >(HX_("jump",ee,c4,69,46),2);
walk = hx::CreateConstEnum< State_obj >(HX_("walk",09,5d,f2,4e),1);
}


