// Generated by Haxe 4.0.1
#include <hxcpp.h>

#ifndef INCLUDED_CollisionDirection
#include <CollisionDirection.h>
#endif

::CollisionDirection CollisionDirection_obj::down;

::CollisionDirection CollisionDirection_obj::left;

::CollisionDirection CollisionDirection_obj::right;

::CollisionDirection CollisionDirection_obj::up;

bool CollisionDirection_obj::__GetStatic(const ::String &inName, ::Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	if (inName==HX_("down",62,f8,6d,42)) { outValue = CollisionDirection_obj::down; return true; }
	if (inName==HX_("left",07,08,b0,47)) { outValue = CollisionDirection_obj::left; return true; }
	if (inName==HX_("right",dc,0b,64,e9)) { outValue = CollisionDirection_obj::right; return true; }
	if (inName==HX_("up",5b,66,00,00)) { outValue = CollisionDirection_obj::up; return true; }
	return super::__GetStatic(inName, outValue, inCallProp);
}

HX_DEFINE_CREATE_ENUM(CollisionDirection_obj)

int CollisionDirection_obj::__FindIndex(::String inName)
{
	if (inName==HX_("down",62,f8,6d,42)) return 1;
	if (inName==HX_("left",07,08,b0,47)) return 2;
	if (inName==HX_("right",dc,0b,64,e9)) return 3;
	if (inName==HX_("up",5b,66,00,00)) return 0;
	return super::__FindIndex(inName);
}

int CollisionDirection_obj::__FindArgCount(::String inName)
{
	if (inName==HX_("down",62,f8,6d,42)) return 0;
	if (inName==HX_("left",07,08,b0,47)) return 0;
	if (inName==HX_("right",dc,0b,64,e9)) return 0;
	if (inName==HX_("up",5b,66,00,00)) return 0;
	return super::__FindArgCount(inName);
}

hx::Val CollisionDirection_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	if (inName==HX_("down",62,f8,6d,42)) return down;
	if (inName==HX_("left",07,08,b0,47)) return left;
	if (inName==HX_("right",dc,0b,64,e9)) return right;
	if (inName==HX_("up",5b,66,00,00)) return up;
	return super::__Field(inName,inCallProp);
}

static ::String CollisionDirection_obj_sStaticFields[] = {
	HX_("up",5b,66,00,00),
	HX_("down",62,f8,6d,42),
	HX_("left",07,08,b0,47),
	HX_("right",dc,0b,64,e9),
	::String(null())
};

hx::Class CollisionDirection_obj::__mClass;

Dynamic __Create_CollisionDirection_obj() { return new CollisionDirection_obj; }

void CollisionDirection_obj::__register()
{

hx::Static(__mClass) = hx::_hx_RegisterClass(HX_("CollisionDirection",8d,1f,ef,d2), hx::TCanCast< CollisionDirection_obj >,CollisionDirection_obj_sStaticFields,0,
	&__Create_CollisionDirection_obj, &__Create,
	&super::__SGetClass(), &CreateCollisionDirection_obj, 0
#ifdef HXCPP_VISIT_ALLOCS
    , 0
#endif
#ifdef HXCPP_SCRIPTABLE
    , 0
#endif
);
	__mClass->mGetStaticField = &CollisionDirection_obj::__GetStatic;
}

void CollisionDirection_obj::__boot()
{
down = hx::CreateConstEnum< CollisionDirection_obj >(HX_("down",62,f8,6d,42),1);
left = hx::CreateConstEnum< CollisionDirection_obj >(HX_("left",07,08,b0,47),2);
right = hx::CreateConstEnum< CollisionDirection_obj >(HX_("right",dc,0b,64,e9),3);
up = hx::CreateConstEnum< CollisionDirection_obj >(HX_("up",5b,66,00,00),0);
}


