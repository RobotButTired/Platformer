// Generated by Haxe 4.0.1
#include <hxcpp.h>

#ifndef INCLUDED_BackGround
#include <BackGround.h>
#endif
#ifndef INCLUDED_Button
#include <Button.h>
#endif
#ifndef INCLUDED_Game
#include <Game.h>
#endif
#ifndef INCLUDED_GameLevel
#include <GameLevel.h>
#endif
#ifndef INCLUDED_Main
#include <Main.h>
#endif
#ifndef INCLUDED_Player
#include <Player.h>
#endif
#ifndef INCLUDED_State
#include <State.h>
#endif
#ifndef INCLUDED_Unit
#include <Unit.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObject
#include <openfl/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObjectContainer
#include <openfl/display/DisplayObjectContainer.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_display_InteractiveObject
#include <openfl/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_openfl_display_Sprite
#include <openfl/display/Sprite.h>
#endif
#ifndef INCLUDED_openfl_events_Event
#include <openfl/events/Event.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_MouseEvent
#include <openfl/events/MouseEvent.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_69efd8c9269cf369_6_new,"Game","new",0x79ba3204,"Game.new","Game.hx",6,0x56a4f9ec)
HX_LOCAL_STACK_FRAME(_hx_pos_69efd8c9269cf369_53_quitButtonClick,"Game","quitButtonClick",0x3679e10b,"Game.quitButtonClick","Game.hx",53,0x56a4f9ec)
HX_LOCAL_STACK_FRAME(_hx_pos_69efd8c9269cf369_56_quitButtonOver,"Game","quitButtonOver",0x51ad35f1,"Game.quitButtonOver","Game.hx",56,0x56a4f9ec)
HX_LOCAL_STACK_FRAME(_hx_pos_69efd8c9269cf369_61_quitButtonOut,"Game","quitButtonOut",0x0f4a3e91,"Game.quitButtonOut","Game.hx",61,0x56a4f9ec)
HX_LOCAL_STACK_FRAME(_hx_pos_69efd8c9269cf369_68_get_quitButtonIsPressed,"Game","get_quitButtonIsPressed",0x5edb1ab2,"Game.get_quitButtonIsPressed","Game.hx",68,0x56a4f9ec)
HX_LOCAL_STACK_FRAME(_hx_pos_69efd8c9269cf369_71_update,"Game","update",0xfb78c2e5,"Game.update","Game.hx",71,0x56a4f9ec)

void Game_obj::__construct(int width,int height){
            	HX_GC_STACKFRAME(&_hx_pos_69efd8c9269cf369_6_new)
HXLINE(  12)		this->quitButtonIsPressed = false;
HXLINE(  17)		super::__construct();
HXLINE(  18)		this->sizeWidth = width;
HXLINE(  19)		this->sizeHeight = height;
HXLINE(  21)		this->backGround =  ::BackGround_obj::__alloc( HX_CTX ,HX_("gameScreen",fe,24,d3,89));
HXLINE(  23)		this->addChild(this->backGround);
HXLINE(  26)		this->gameLevel =  ::GameLevel_obj::__alloc( HX_CTX ,this->sizeWidth,this->sizeHeight);
HXLINE(  27)		this->addChild(this->gameLevel);
HXLINE(  31)		this->player =  ::Player_obj::__alloc( HX_CTX );
HXLINE(  32)		this->player->set_x(( (Float)(100) ));
HXLINE(  33)		 ::Player _hx_tmp = this->player;
HXDLIN(  33)		int _hx_tmp1 = (::Main_obj::sizeHeight - 160);
HXDLIN(  33)		_hx_tmp->set_y((( (Float)(_hx_tmp1) ) - (this->player->get_height() / ( (Float)(2) ))));
HXLINE(  34)		this->addChild(this->player);
HXLINE(  37)		this->quitButton =  ::Button_obj::__alloc( HX_CTX ,(( (Float)(this->sizeWidth) ) / ( (Float)(2) )),(( (Float)(this->sizeHeight) ) / ( (Float)(2) )),HX_("QUIT",cf,07,cb,35));
HXLINE(  38)		this->quitButton->set_x((( (Float)((this->sizeWidth * 7)) ) / ( (Float)(8) )));
HXLINE(  39)		this->quitButton->set_y((( (Float)(this->sizeHeight) ) / ( (Float)(25) )));
HXLINE(  41)		this->addChild(this->quitButton);
HXLINE(  43)		this->quitButton->addEventListener(HX_("mouseOver",19,4a,0d,f6),this->quitButtonOver_dyn(),null(),null(),null());
HXLINE(  44)		this->quitButton->addEventListener(HX_("mouseOut",69,e7,1d,a4),this->quitButtonOut_dyn(),null(),null(),null());
HXLINE(  45)		this->quitButton->addEventListener(HX_("mouseDown",27,b1,c2,ee),this->quitButtonClick_dyn(),null(),null(),null());
            	}

Dynamic Game_obj::__CreateEmpty() { return new Game_obj; }

void *Game_obj::_hx_vtable = 0;

Dynamic Game_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Game_obj > _hx_result = new Game_obj();
	_hx_result->__construct(inArgs[0],inArgs[1]);
	return _hx_result;
}

bool Game_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x19c29573) {
		if (inClassId<=(int)0x17120186) {
			if (inClassId<=(int)0x0ddfced7) {
				return inClassId==(int)0x00000001 || inClassId==(int)0x0ddfced7;
			} else {
				return inClassId==(int)0x17120186;
			}
		} else {
			return inClassId==(int)0x19c29573;
		}
	} else {
		if (inClassId<=(int)0x2f382012) {
			return inClassId==(int)0x1b123bf8 || inClassId==(int)0x2f382012;
		} else {
			return inClassId==(int)0x3f2b00af;
		}
	}
}

void Game_obj::quitButtonClick( ::openfl::events::MouseEvent e){
            	HX_STACKFRAME(&_hx_pos_69efd8c9269cf369_53_quitButtonClick)
HXDLIN(  53)		this->quitButtonIsPressed = true;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Game_obj,quitButtonClick,(void))

void Game_obj::quitButtonOver( ::openfl::events::MouseEvent e){
            	HX_STACKFRAME(&_hx_pos_69efd8c9269cf369_56_quitButtonOver)
HXLINE(  57)		this->quitButton->set_scaleX(((Float)1.25));
HXLINE(  58)		this->quitButton->set_scaleY(((Float)1.25));
            	}


HX_DEFINE_DYNAMIC_FUNC1(Game_obj,quitButtonOver,(void))

void Game_obj::quitButtonOut( ::openfl::events::MouseEvent e){
            	HX_STACKFRAME(&_hx_pos_69efd8c9269cf369_61_quitButtonOut)
HXLINE(  62)		this->quitButton->set_scaleX(((Float)1.0));
HXLINE(  63)		this->quitButton->set_scaleY(((Float)1.0));
            	}


HX_DEFINE_DYNAMIC_FUNC1(Game_obj,quitButtonOut,(void))

bool Game_obj::get_quitButtonIsPressed(){
            	HX_STACKFRAME(&_hx_pos_69efd8c9269cf369_68_get_quitButtonIsPressed)
HXDLIN(  68)		return this->quitButtonIsPressed;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Game_obj,get_quitButtonIsPressed,return )

void Game_obj::update(){
            	HX_STACKFRAME(&_hx_pos_69efd8c9269cf369_71_update)
HXLINE(  72)		this->player->move();
HXLINE(  73)		 ::Player _hx_tmp = this->player;
HXDLIN(  73)		_hx_tmp->spriteAnimated(this->player->get_state());
            	}


HX_DEFINE_DYNAMIC_FUNC0(Game_obj,update,(void))


hx::ObjectPtr< Game_obj > Game_obj::__new(int width,int height) {
	hx::ObjectPtr< Game_obj > __this = new Game_obj();
	__this->__construct(width,height);
	return __this;
}

hx::ObjectPtr< Game_obj > Game_obj::__alloc(hx::Ctx *_hx_ctx,int width,int height) {
	Game_obj *__this = (Game_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(Game_obj), true, "Game"));
	*(void **)__this = Game_obj::_hx_vtable;
	__this->__construct(width,height);
	return __this;
}

Game_obj::Game_obj()
{
}

void Game_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(Game);
	HX_MARK_MEMBER_NAME(sizeWidth,"sizeWidth");
	HX_MARK_MEMBER_NAME(sizeHeight,"sizeHeight");
	HX_MARK_MEMBER_NAME(backGround,"backGround");
	HX_MARK_MEMBER_NAME(quitButton,"quitButton");
	HX_MARK_MEMBER_NAME(quitButtonIsPressed,"quitButtonIsPressed");
	HX_MARK_MEMBER_NAME(gameLevel,"gameLevel");
	HX_MARK_MEMBER_NAME(player,"player");
	 ::openfl::display::Sprite_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void Game_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(sizeWidth,"sizeWidth");
	HX_VISIT_MEMBER_NAME(sizeHeight,"sizeHeight");
	HX_VISIT_MEMBER_NAME(backGround,"backGround");
	HX_VISIT_MEMBER_NAME(quitButton,"quitButton");
	HX_VISIT_MEMBER_NAME(quitButtonIsPressed,"quitButtonIsPressed");
	HX_VISIT_MEMBER_NAME(gameLevel,"gameLevel");
	HX_VISIT_MEMBER_NAME(player,"player");
	 ::openfl::display::Sprite_obj::__Visit(HX_VISIT_ARG);
}

hx::Val Game_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"player") ) { return hx::Val( player ); }
		if (HX_FIELD_EQ(inName,"update") ) { return hx::Val( update_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"sizeWidth") ) { return hx::Val( sizeWidth ); }
		if (HX_FIELD_EQ(inName,"gameLevel") ) { return hx::Val( gameLevel ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"sizeHeight") ) { return hx::Val( sizeHeight ); }
		if (HX_FIELD_EQ(inName,"backGround") ) { return hx::Val( backGround ); }
		if (HX_FIELD_EQ(inName,"quitButton") ) { return hx::Val( quitButton ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"quitButtonOut") ) { return hx::Val( quitButtonOut_dyn() ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"quitButtonOver") ) { return hx::Val( quitButtonOver_dyn() ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"quitButtonClick") ) { return hx::Val( quitButtonClick_dyn() ); }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"quitButtonIsPressed") ) { return hx::Val( quitButtonIsPressed ); }
		break;
	case 23:
		if (HX_FIELD_EQ(inName,"get_quitButtonIsPressed") ) { return hx::Val( get_quitButtonIsPressed_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val Game_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"player") ) { player=inValue.Cast<  ::Player >(); return inValue; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"sizeWidth") ) { sizeWidth=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"gameLevel") ) { gameLevel=inValue.Cast<  ::GameLevel >(); return inValue; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"sizeHeight") ) { sizeHeight=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"backGround") ) { backGround=inValue.Cast<  ::BackGround >(); return inValue; }
		if (HX_FIELD_EQ(inName,"quitButton") ) { quitButton=inValue.Cast<  ::Button >(); return inValue; }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"quitButtonIsPressed") ) { quitButtonIsPressed=inValue.Cast< bool >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void Game_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("sizeWidth",85,29,f9,c8));
	outFields->push(HX_("sizeHeight",88,a3,5a,c7));
	outFields->push(HX_("backGround",0e,08,b2,5a));
	outFields->push(HX_("quitButton",21,5b,13,a5));
	outFields->push(HX_("quitButtonIsPressed",77,e8,7a,c2));
	outFields->push(HX_("gameLevel",32,04,7e,a7));
	outFields->push(HX_("player",61,eb,b8,37));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo Game_obj_sMemberStorageInfo[] = {
	{hx::fsInt,(int)offsetof(Game_obj,sizeWidth),HX_("sizeWidth",85,29,f9,c8)},
	{hx::fsInt,(int)offsetof(Game_obj,sizeHeight),HX_("sizeHeight",88,a3,5a,c7)},
	{hx::fsObject /*  ::BackGround */ ,(int)offsetof(Game_obj,backGround),HX_("backGround",0e,08,b2,5a)},
	{hx::fsObject /*  ::Button */ ,(int)offsetof(Game_obj,quitButton),HX_("quitButton",21,5b,13,a5)},
	{hx::fsBool,(int)offsetof(Game_obj,quitButtonIsPressed),HX_("quitButtonIsPressed",77,e8,7a,c2)},
	{hx::fsObject /*  ::GameLevel */ ,(int)offsetof(Game_obj,gameLevel),HX_("gameLevel",32,04,7e,a7)},
	{hx::fsObject /*  ::Player */ ,(int)offsetof(Game_obj,player),HX_("player",61,eb,b8,37)},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *Game_obj_sStaticStorageInfo = 0;
#endif

static ::String Game_obj_sMemberFields[] = {
	HX_("sizeWidth",85,29,f9,c8),
	HX_("sizeHeight",88,a3,5a,c7),
	HX_("backGround",0e,08,b2,5a),
	HX_("quitButton",21,5b,13,a5),
	HX_("quitButtonIsPressed",77,e8,7a,c2),
	HX_("gameLevel",32,04,7e,a7),
	HX_("player",61,eb,b8,37),
	HX_("quitButtonClick",67,99,35,9d),
	HX_("quitButtonOver",15,bd,27,d6),
	HX_("quitButtonOut",ed,e7,43,c5),
	HX_("get_quitButtonIsPressed",0e,8f,d0,ca),
	HX_("update",09,86,05,87),
	::String(null()) };

hx::Class Game_obj::__mClass;

void Game_obj::__register()
{
	Game_obj _hx_dummy;
	Game_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("Game",12,20,38,2f);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(Game_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< Game_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Game_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Game_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

