// Generated by Haxe 4.0.1
#include <hxcpp.h>

#ifndef INCLUDED_BackGround
#include <BackGround.h>
#endif
#ifndef INCLUDED_Button
#include <Button.h>
#endif
#ifndef INCLUDED_GameOverScreen
#include <GameOverScreen.h>
#endif
#ifndef INCLUDED_Main
#include <Main.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObject
#include <openfl/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObjectContainer
#include <openfl/display/DisplayObjectContainer.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_display_InteractiveObject
#include <openfl/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_openfl_display_Sprite
#include <openfl/display/Sprite.h>
#endif
#ifndef INCLUDED_openfl_events_Event
#include <openfl/events/Event.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_MouseEvent
#include <openfl/events/MouseEvent.h>
#endif
#ifndef INCLUDED_openfl_text_TextField
#include <openfl/text/TextField.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_8a6ee0e24ab90c83_7_new,"GameOverScreen","new",0x7f73f884,"GameOverScreen.new","GameOverScreen.hx",7,0x2fa3836c)
HX_LOCAL_STACK_FRAME(_hx_pos_8a6ee0e24ab90c83_51_quitButtonOver,"GameOverScreen","quitButtonOver",0x9313ff71,"GameOverScreen.quitButtonOver","GameOverScreen.hx",51,0x2fa3836c)
HX_LOCAL_STACK_FRAME(_hx_pos_8a6ee0e24ab90c83_56_quitButtonOut,"GameOverScreen","quitButtonOut",0x4c6d2511,"GameOverScreen.quitButtonOut","GameOverScreen.hx",56,0x2fa3836c)
HX_LOCAL_STACK_FRAME(_hx_pos_8a6ee0e24ab90c83_62_quitButtonClick,"GameOverScreen","quitButtonClick",0x2f03678b,"GameOverScreen.quitButtonClick","GameOverScreen.hx",62,0x2fa3836c)
HX_LOCAL_STACK_FRAME(_hx_pos_8a6ee0e24ab90c83_66_get_quitButtonIsPressed,"GameOverScreen","get_quitButtonIsPressed",0x5e0f2132,"GameOverScreen.get_quitButtonIsPressed","GameOverScreen.hx",66,0x2fa3836c)
HX_LOCAL_STACK_FRAME(_hx_pos_8a6ee0e24ab90c83_69_reset,"GameOverScreen","reset",0x8c5dc2f3,"GameOverScreen.reset","GameOverScreen.hx",69,0x2fa3836c)
HX_LOCAL_STACK_FRAME(_hx_pos_8a6ee0e24ab90c83_75_tryAgainButtononOver,"GameOverScreen","tryAgainButtononOver",0xd7d5c2a6,"GameOverScreen.tryAgainButtononOver","GameOverScreen.hx",75,0x2fa3836c)
HX_LOCAL_STACK_FRAME(_hx_pos_8a6ee0e24ab90c83_80_tryAgainButtonOut,"GameOverScreen","tryAgainButtonOut",0x456265fb,"GameOverScreen.tryAgainButtonOut","GameOverScreen.hx",80,0x2fa3836c)
HX_LOCAL_STACK_FRAME(_hx_pos_8a6ee0e24ab90c83_86_tryAgainButtonClick,"GameOverScreen","tryAgainButtonClick",0x407a36f5,"GameOverScreen.tryAgainButtonClick","GameOverScreen.hx",86,0x2fa3836c)
HX_LOCAL_STACK_FRAME(_hx_pos_8a6ee0e24ab90c83_90_get_tryAgainButtonIsPressed,"GameOverScreen","get_tryAgainButtonIsPressed",0x8278851c,"GameOverScreen.get_tryAgainButtonIsPressed","GameOverScreen.hx",90,0x2fa3836c)

void GameOverScreen_obj::__construct(){
            	HX_GC_STACKFRAME(&_hx_pos_8a6ee0e24ab90c83_7_new)
HXLINE(  12)		this->tryAgainButtonIsPressed = false;
HXLINE(  10)		this->quitButtonIsPressed = false;
HXLINE(  19)		super::__construct();
HXLINE(  20)		this->backGround =  ::BackGround_obj::__alloc( HX_CTX ,HX_("gameOverScreen",72,12,97,bb));
HXLINE(  21)		this->addChild(this->backGround);
HXLINE(  23)		this->quitButton =  ::Button_obj::__alloc( HX_CTX ,( (Float)(::Main_obj::sizeWidth) ),( (Float)(::Main_obj::sizeHeight) ),HX_("QUIT",cf,07,cb,35));
HXLINE(  24)		this->quitButton->set_x((( (Float)(::Main_obj::sizeWidth) ) / ( (Float)(4) )));
HXLINE(  25)		this->quitButton->set_y((( (Float)((::Main_obj::sizeHeight * 5)) ) / ( (Float)(6) )));
HXLINE(  26)		this->addChild(this->quitButton);
HXLINE(  27)		this->quitButton->addEventListener(HX_("mouseOver",19,4a,0d,f6),this->quitButtonOver_dyn(),null(),null(),null());
HXLINE(  28)		this->quitButton->addEventListener(HX_("mouseOut",69,e7,1d,a4),this->quitButtonOut_dyn(),null(),null(),null());
HXLINE(  29)		this->quitButton->addEventListener(HX_("mouseDown",27,b1,c2,ee),this->quitButtonClick_dyn(),null(),null(),null());
HXLINE(  31)		this->tryAgainButton =  ::Button_obj::__alloc( HX_CTX ,( (Float)(::Main_obj::sizeWidth) ),( (Float)(::Main_obj::sizeHeight) ),HX_("TRY AGAIN",7b,44,ec,65));
HXLINE(  32)		this->tryAgainButton->set_x((( (Float)((::Main_obj::sizeWidth * 3)) ) / ( (Float)(4) )));
HXLINE(  33)		this->tryAgainButton->set_y((( (Float)((::Main_obj::sizeHeight * 5)) ) / ( (Float)(6) )));
HXLINE(  34)		this->addChild(this->tryAgainButton);
HXLINE(  35)		this->tryAgainButton->addEventListener(HX_("mouseOver",19,4a,0d,f6),this->tryAgainButtononOver_dyn(),null(),null(),null());
HXLINE(  36)		this->tryAgainButton->addEventListener(HX_("mouseOut",69,e7,1d,a4),this->tryAgainButtonOut_dyn(),null(),null(),null());
HXLINE(  37)		this->tryAgainButton->addEventListener(HX_("mouseDown",27,b1,c2,ee),this->tryAgainButtonClick_dyn(),null(),null(),null());
HXLINE(  39)		this->pointsField =  ::openfl::text::TextField_obj::__alloc( HX_CTX );
HXLINE(  40)		this->pointsField->set_text(HX_("0",30,00,00,00));
HXLINE(  41)		this->pointsField->set_x((( (Float)(::Main_obj::sizeWidth) ) / ( (Float)(2) )));
HXLINE(  42)		this->pointsField->set_y((( (Float)(::Main_obj::sizeHeight) ) / ( (Float)(2) )));
HXLINE(  43)		this->pointsField->set_scaleX(((Float)4.0));
HXLINE(  44)		this->pointsField->set_scaleY(((Float)4.0));
HXLINE(  45)		this->pointsField->mouseEnabled = false;
HXLINE(  46)		this->addChild(this->pointsField);
            	}

Dynamic GameOverScreen_obj::__CreateEmpty() { return new GameOverScreen_obj; }

void *GameOverScreen_obj::_hx_vtable = 0;

Dynamic GameOverScreen_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< GameOverScreen_obj > _hx_result = new GameOverScreen_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool GameOverScreen_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x19c29573) {
		if (inClassId<=(int)0x17120186) {
			if (inClassId<=(int)0x0ddfced7) {
				return inClassId==(int)0x00000001 || inClassId==(int)0x0ddfced7;
			} else {
				return inClassId==(int)0x17120186;
			}
		} else {
			return inClassId==(int)0x19c29573;
		}
	} else {
		if (inClassId<=(int)0x3f2b00af) {
			return inClassId==(int)0x1b123bf8 || inClassId==(int)0x3f2b00af;
		} else {
			return inClassId==(int)0x65eca692;
		}
	}
}

void GameOverScreen_obj::quitButtonOver( ::openfl::events::MouseEvent e){
            	HX_STACKFRAME(&_hx_pos_8a6ee0e24ab90c83_51_quitButtonOver)
HXLINE(  52)		this->quitButton->set_scaleX(((Float)1.25));
HXLINE(  53)		this->quitButton->set_scaleY(((Float)1.25));
            	}


HX_DEFINE_DYNAMIC_FUNC1(GameOverScreen_obj,quitButtonOver,(void))

void GameOverScreen_obj::quitButtonOut( ::openfl::events::MouseEvent e){
            	HX_STACKFRAME(&_hx_pos_8a6ee0e24ab90c83_56_quitButtonOut)
HXLINE(  57)		this->quitButton->set_scaleX(((Float)1.0));
HXLINE(  58)		this->quitButton->set_scaleY(((Float)1.0));
            	}


HX_DEFINE_DYNAMIC_FUNC1(GameOverScreen_obj,quitButtonOut,(void))

void GameOverScreen_obj::quitButtonClick( ::openfl::events::MouseEvent e){
            	HX_STACKFRAME(&_hx_pos_8a6ee0e24ab90c83_62_quitButtonClick)
HXDLIN(  62)		this->quitButtonIsPressed = true;
            	}


HX_DEFINE_DYNAMIC_FUNC1(GameOverScreen_obj,quitButtonClick,(void))

bool GameOverScreen_obj::get_quitButtonIsPressed(){
            	HX_STACKFRAME(&_hx_pos_8a6ee0e24ab90c83_66_get_quitButtonIsPressed)
HXDLIN(  66)		return this->quitButtonIsPressed;
            	}


HX_DEFINE_DYNAMIC_FUNC0(GameOverScreen_obj,get_quitButtonIsPressed,return )

void GameOverScreen_obj::reset(){
            	HX_STACKFRAME(&_hx_pos_8a6ee0e24ab90c83_69_reset)
HXLINE(  70)		this->quitButtonIsPressed = false;
HXLINE(  71)		this->tryAgainButtonIsPressed = false;
            	}


HX_DEFINE_DYNAMIC_FUNC0(GameOverScreen_obj,reset,(void))

void GameOverScreen_obj::tryAgainButtononOver( ::openfl::events::MouseEvent e){
            	HX_STACKFRAME(&_hx_pos_8a6ee0e24ab90c83_75_tryAgainButtononOver)
HXLINE(  76)		this->tryAgainButton->set_scaleX(((Float)1.25));
HXLINE(  77)		this->tryAgainButton->set_scaleY(((Float)1.25));
            	}


HX_DEFINE_DYNAMIC_FUNC1(GameOverScreen_obj,tryAgainButtononOver,(void))

void GameOverScreen_obj::tryAgainButtonOut( ::openfl::events::MouseEvent e){
            	HX_STACKFRAME(&_hx_pos_8a6ee0e24ab90c83_80_tryAgainButtonOut)
HXLINE(  81)		this->tryAgainButton->set_scaleX(((Float)1.0));
HXLINE(  82)		this->tryAgainButton->set_scaleY(((Float)1.0));
            	}


HX_DEFINE_DYNAMIC_FUNC1(GameOverScreen_obj,tryAgainButtonOut,(void))

void GameOverScreen_obj::tryAgainButtonClick( ::openfl::events::MouseEvent e){
            	HX_STACKFRAME(&_hx_pos_8a6ee0e24ab90c83_86_tryAgainButtonClick)
HXDLIN(  86)		this->tryAgainButtonIsPressed = true;
            	}


HX_DEFINE_DYNAMIC_FUNC1(GameOverScreen_obj,tryAgainButtonClick,(void))

bool GameOverScreen_obj::get_tryAgainButtonIsPressed(){
            	HX_STACKFRAME(&_hx_pos_8a6ee0e24ab90c83_90_get_tryAgainButtonIsPressed)
HXDLIN(  90)		return this->tryAgainButtonIsPressed;
            	}


HX_DEFINE_DYNAMIC_FUNC0(GameOverScreen_obj,get_tryAgainButtonIsPressed,return )


hx::ObjectPtr< GameOverScreen_obj > GameOverScreen_obj::__new() {
	hx::ObjectPtr< GameOverScreen_obj > __this = new GameOverScreen_obj();
	__this->__construct();
	return __this;
}

hx::ObjectPtr< GameOverScreen_obj > GameOverScreen_obj::__alloc(hx::Ctx *_hx_ctx) {
	GameOverScreen_obj *__this = (GameOverScreen_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(GameOverScreen_obj), true, "GameOverScreen"));
	*(void **)__this = GameOverScreen_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

GameOverScreen_obj::GameOverScreen_obj()
{
}

void GameOverScreen_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(GameOverScreen);
	HX_MARK_MEMBER_NAME(quitButton,"quitButton");
	HX_MARK_MEMBER_NAME(quitButtonIsPressed,"quitButtonIsPressed");
	HX_MARK_MEMBER_NAME(tryAgainButton,"tryAgainButton");
	HX_MARK_MEMBER_NAME(tryAgainButtonIsPressed,"tryAgainButtonIsPressed");
	HX_MARK_MEMBER_NAME(pointsField,"pointsField");
	HX_MARK_MEMBER_NAME(backGround,"backGround");
	 ::openfl::display::Sprite_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void GameOverScreen_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(quitButton,"quitButton");
	HX_VISIT_MEMBER_NAME(quitButtonIsPressed,"quitButtonIsPressed");
	HX_VISIT_MEMBER_NAME(tryAgainButton,"tryAgainButton");
	HX_VISIT_MEMBER_NAME(tryAgainButtonIsPressed,"tryAgainButtonIsPressed");
	HX_VISIT_MEMBER_NAME(pointsField,"pointsField");
	HX_VISIT_MEMBER_NAME(backGround,"backGround");
	 ::openfl::display::Sprite_obj::__Visit(HX_VISIT_ARG);
}

hx::Val GameOverScreen_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"reset") ) { return hx::Val( reset_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"quitButton") ) { return hx::Val( quitButton ); }
		if (HX_FIELD_EQ(inName,"backGround") ) { return hx::Val( backGround ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"pointsField") ) { return hx::Val( pointsField ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"quitButtonOut") ) { return hx::Val( quitButtonOut_dyn() ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"tryAgainButton") ) { return hx::Val( tryAgainButton ); }
		if (HX_FIELD_EQ(inName,"quitButtonOver") ) { return hx::Val( quitButtonOver_dyn() ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"quitButtonClick") ) { return hx::Val( quitButtonClick_dyn() ); }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"tryAgainButtonOut") ) { return hx::Val( tryAgainButtonOut_dyn() ); }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"quitButtonIsPressed") ) { return hx::Val( quitButtonIsPressed ); }
		if (HX_FIELD_EQ(inName,"tryAgainButtonClick") ) { return hx::Val( tryAgainButtonClick_dyn() ); }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"tryAgainButtononOver") ) { return hx::Val( tryAgainButtononOver_dyn() ); }
		break;
	case 23:
		if (HX_FIELD_EQ(inName,"tryAgainButtonIsPressed") ) { return hx::Val( tryAgainButtonIsPressed ); }
		if (HX_FIELD_EQ(inName,"get_quitButtonIsPressed") ) { return hx::Val( get_quitButtonIsPressed_dyn() ); }
		break;
	case 27:
		if (HX_FIELD_EQ(inName,"get_tryAgainButtonIsPressed") ) { return hx::Val( get_tryAgainButtonIsPressed_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val GameOverScreen_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 10:
		if (HX_FIELD_EQ(inName,"quitButton") ) { quitButton=inValue.Cast<  ::Button >(); return inValue; }
		if (HX_FIELD_EQ(inName,"backGround") ) { backGround=inValue.Cast<  ::BackGround >(); return inValue; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"pointsField") ) { pointsField=inValue.Cast<  ::openfl::text::TextField >(); return inValue; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"tryAgainButton") ) { tryAgainButton=inValue.Cast<  ::Button >(); return inValue; }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"quitButtonIsPressed") ) { quitButtonIsPressed=inValue.Cast< bool >(); return inValue; }
		break;
	case 23:
		if (HX_FIELD_EQ(inName,"tryAgainButtonIsPressed") ) { tryAgainButtonIsPressed=inValue.Cast< bool >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void GameOverScreen_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("quitButton",21,5b,13,a5));
	outFields->push(HX_("quitButtonIsPressed",77,e8,7a,c2));
	outFields->push(HX_("tryAgainButton",f7,65,03,c0));
	outFields->push(HX_("tryAgainButtonIsPressed",e1,d2,79,70));
	outFields->push(HX_("pointsField",97,53,cf,40));
	outFields->push(HX_("backGround",0e,08,b2,5a));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo GameOverScreen_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*  ::Button */ ,(int)offsetof(GameOverScreen_obj,quitButton),HX_("quitButton",21,5b,13,a5)},
	{hx::fsBool,(int)offsetof(GameOverScreen_obj,quitButtonIsPressed),HX_("quitButtonIsPressed",77,e8,7a,c2)},
	{hx::fsObject /*  ::Button */ ,(int)offsetof(GameOverScreen_obj,tryAgainButton),HX_("tryAgainButton",f7,65,03,c0)},
	{hx::fsBool,(int)offsetof(GameOverScreen_obj,tryAgainButtonIsPressed),HX_("tryAgainButtonIsPressed",e1,d2,79,70)},
	{hx::fsObject /*  ::openfl::text::TextField */ ,(int)offsetof(GameOverScreen_obj,pointsField),HX_("pointsField",97,53,cf,40)},
	{hx::fsObject /*  ::BackGround */ ,(int)offsetof(GameOverScreen_obj,backGround),HX_("backGround",0e,08,b2,5a)},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *GameOverScreen_obj_sStaticStorageInfo = 0;
#endif

static ::String GameOverScreen_obj_sMemberFields[] = {
	HX_("quitButton",21,5b,13,a5),
	HX_("quitButtonIsPressed",77,e8,7a,c2),
	HX_("tryAgainButton",f7,65,03,c0),
	HX_("tryAgainButtonIsPressed",e1,d2,79,70),
	HX_("pointsField",97,53,cf,40),
	HX_("backGround",0e,08,b2,5a),
	HX_("quitButtonOver",15,bd,27,d6),
	HX_("quitButtonOut",ed,e7,43,c5),
	HX_("quitButtonClick",67,99,35,9d),
	HX_("get_quitButtonIsPressed",0e,8f,d0,ca),
	HX_("reset",cf,49,c8,e6),
	HX_("tryAgainButtononOver",4a,53,95,27),
	HX_("tryAgainButtonOut",d7,c6,e9,49),
	HX_("tryAgainButtonClick",d1,86,40,fe),
	HX_("get_tryAgainButtonIsPressed",f8,10,1c,3d),
	::String(null()) };

hx::Class GameOverScreen_obj::__mClass;

void GameOverScreen_obj::__register()
{
	GameOverScreen_obj _hx_dummy;
	GameOverScreen_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("GameOverScreen",92,a6,ec,65);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(GameOverScreen_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< GameOverScreen_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = GameOverScreen_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = GameOverScreen_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

