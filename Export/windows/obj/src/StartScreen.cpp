// Generated by Haxe 4.0.1
#include <hxcpp.h>

#ifndef INCLUDED_BackGround
#include <BackGround.h>
#endif
#ifndef INCLUDED_Button
#include <Button.h>
#endif
#ifndef INCLUDED_Main
#include <Main.h>
#endif
#ifndef INCLUDED_StartScreen
#include <StartScreen.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObject
#include <openfl/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObjectContainer
#include <openfl/display/DisplayObjectContainer.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_display_InteractiveObject
#include <openfl/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_openfl_display_Sprite
#include <openfl/display/Sprite.h>
#endif
#ifndef INCLUDED_openfl_events_Event
#include <openfl/events/Event.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_MouseEvent
#include <openfl/events/MouseEvent.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_ae4239bd2e271784_8_new,"StartScreen","new",0x40df9140,"StartScreen.new","StartScreen.hx",8,0x01705630)
HX_LOCAL_STACK_FRAME(_hx_pos_ae4239bd2e271784_47_startButtonOver,"StartScreen","startButtonOver",0xb3831848,"StartScreen.startButtonOver","StartScreen.hx",47,0x01705630)
HX_LOCAL_STACK_FRAME(_hx_pos_ae4239bd2e271784_52_startButtonOut,"StartScreen","startButtonOut",0xce4b341a,"StartScreen.startButtonOut","StartScreen.hx",52,0x01705630)
HX_LOCAL_STACK_FRAME(_hx_pos_ae4239bd2e271784_58_startButtonClick,"StartScreen","startButtonClick",0x6fca0ad4,"StartScreen.startButtonClick","StartScreen.hx",58,0x01705630)
HX_LOCAL_STACK_FRAME(_hx_pos_ae4239bd2e271784_61_rulesButtonOver,"StartScreen","rulesButtonOver",0x08e3341d,"StartScreen.rulesButtonOver","StartScreen.hx",61,0x01705630)
HX_LOCAL_STACK_FRAME(_hx_pos_ae4239bd2e271784_66_rulesButtonOut,"StartScreen","rulesButtonOut",0xd90229e5,"StartScreen.rulesButtonOut","StartScreen.hx",66,0x01705630)
HX_LOCAL_STACK_FRAME(_hx_pos_ae4239bd2e271784_72_rulesButtonClick,"StartScreen","rulesButtonClick",0xce82495f,"StartScreen.rulesButtonClick","StartScreen.hx",72,0x01705630)
HX_LOCAL_STACK_FRAME(_hx_pos_ae4239bd2e271784_76_get_rulesButtonIsPressed,"StartScreen","get_rulesButtonIsPressed",0xd77721f8,"StartScreen.get_rulesButtonIsPressed","StartScreen.hx",76,0x01705630)
HX_LOCAL_STACK_FRAME(_hx_pos_ae4239bd2e271784_79_reset,"StartScreen","reset",0x326e02af,"StartScreen.reset","StartScreen.hx",79,0x01705630)
HX_LOCAL_STACK_FRAME(_hx_pos_ae4239bd2e271784_85_get_startButtonIsPressed,"StartScreen","get_startButtonIsPressed",0xdc1541ed,"StartScreen.get_startButtonIsPressed","StartScreen.hx",85,0x01705630)

void StartScreen_obj::__construct(int width,int height, ::Main main){
            	HX_GC_STACKFRAME(&_hx_pos_ae4239bd2e271784_8_new)
HXLINE(  13)		this->rulesButtonIsPressed = false;
HXLINE(  11)		this->startButtonIsPressed = false;
HXLINE(  22)		super::__construct();
HXLINE(  25)		this->sizeWidth = width;
HXLINE(  26)		this->sizeHeight = height;
HXLINE(  28)		this->backGround =  ::BackGround_obj::__alloc( HX_CTX ,HX_("startScreen",6e,99,43,bf));
HXLINE(  29)		this->addChild(this->backGround);
HXLINE(  31)		this->startButton =  ::Button_obj::__alloc( HX_CTX ,( (Float)(this->sizeWidth) ),( (Float)(this->sizeHeight) ),HX_("START",42,ac,f9,01));
HXLINE(  32)		this->startButton->set_x((( (Float)(this->sizeWidth) ) / ( (Float)(2) )));
HXLINE(  33)		this->startButton->set_y((( (Float)(this->sizeHeight) ) / ( (Float)(4) )));
HXLINE(  34)		this->startButton->addEventListener(HX_("mouseOver",19,4a,0d,f6),this->startButtonOver_dyn(),null(),null(),null());
HXLINE(  35)		this->startButton->addEventListener(HX_("mouseOut",69,e7,1d,a4),this->startButtonOut_dyn(),null(),null(),null());
HXLINE(  36)		this->startButton->addEventListener(HX_("mouseDown",27,b1,c2,ee),this->startButtonClick_dyn(),null(),null(),null());
HXLINE(  37)		this->addChild(this->startButton);
HXLINE(  38)		this->rulesButton =  ::Button_obj::__alloc( HX_CTX ,( (Float)(this->sizeWidth) ),( (Float)(this->sizeHeight) ),HX_("RULES",d7,9b,44,6f));
HXLINE(  39)		this->rulesButton->set_x((( (Float)(this->sizeWidth) ) / ( (Float)(2) )));
HXLINE(  40)		this->rulesButton->set_y((( (Float)((this->sizeHeight * 3)) ) / ( (Float)(4) )));
HXLINE(  41)		this->addChild(this->rulesButton);
HXLINE(  42)		this->rulesButton->addEventListener(HX_("mouseOver",19,4a,0d,f6),this->rulesButtonOver_dyn(),null(),null(),null());
HXLINE(  43)		this->rulesButton->addEventListener(HX_("mouseOut",69,e7,1d,a4),this->rulesButtonOut_dyn(),null(),null(),null());
HXLINE(  44)		this->rulesButton->addEventListener(HX_("mouseDown",27,b1,c2,ee),this->rulesButtonClick_dyn(),null(),null(),null());
            	}

Dynamic StartScreen_obj::__CreateEmpty() { return new StartScreen_obj; }

void *StartScreen_obj::_hx_vtable = 0;

Dynamic StartScreen_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< StartScreen_obj > _hx_result = new StartScreen_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2]);
	return _hx_result;
}

bool StartScreen_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x19c29573) {
		if (inClassId<=(int)0x17120186) {
			if (inClassId<=(int)0x0ddfced7) {
				return inClassId==(int)0x00000001 || inClassId==(int)0x0ddfced7;
			} else {
				return inClassId==(int)0x17120186;
			}
		} else {
			return inClassId==(int)0x19c29573;
		}
	} else {
		if (inClassId<=(int)0x3f2b00af) {
			return inClassId==(int)0x1b123bf8 || inClassId==(int)0x3f2b00af;
		} else {
			return inClassId==(int)0x523d036a;
		}
	}
}

void StartScreen_obj::startButtonOver( ::openfl::events::MouseEvent e){
            	HX_STACKFRAME(&_hx_pos_ae4239bd2e271784_47_startButtonOver)
HXLINE(  48)		this->startButton->set_scaleX(((Float)1.25));
HXLINE(  49)		this->startButton->set_scaleY(((Float)1.25));
            	}


HX_DEFINE_DYNAMIC_FUNC1(StartScreen_obj,startButtonOver,(void))

void StartScreen_obj::startButtonOut( ::openfl::events::MouseEvent e){
            	HX_STACKFRAME(&_hx_pos_ae4239bd2e271784_52_startButtonOut)
HXLINE(  53)		this->startButton->set_scaleX(((Float)1.0));
HXLINE(  54)		this->startButton->set_scaleY(((Float)1.0));
            	}


HX_DEFINE_DYNAMIC_FUNC1(StartScreen_obj,startButtonOut,(void))

void StartScreen_obj::startButtonClick( ::openfl::events::MouseEvent e){
            	HX_STACKFRAME(&_hx_pos_ae4239bd2e271784_58_startButtonClick)
HXDLIN(  58)		this->startButtonIsPressed = true;
            	}


HX_DEFINE_DYNAMIC_FUNC1(StartScreen_obj,startButtonClick,(void))

void StartScreen_obj::rulesButtonOver( ::openfl::events::MouseEvent e){
            	HX_STACKFRAME(&_hx_pos_ae4239bd2e271784_61_rulesButtonOver)
HXLINE(  62)		this->rulesButton->set_scaleX(((Float)1.25));
HXLINE(  63)		this->rulesButton->set_scaleY(((Float)1.25));
            	}


HX_DEFINE_DYNAMIC_FUNC1(StartScreen_obj,rulesButtonOver,(void))

void StartScreen_obj::rulesButtonOut( ::openfl::events::MouseEvent e){
            	HX_STACKFRAME(&_hx_pos_ae4239bd2e271784_66_rulesButtonOut)
HXLINE(  67)		this->rulesButton->set_scaleX(((Float)1.0));
HXLINE(  68)		this->rulesButton->set_scaleY(((Float)1.0));
            	}


HX_DEFINE_DYNAMIC_FUNC1(StartScreen_obj,rulesButtonOut,(void))

void StartScreen_obj::rulesButtonClick( ::openfl::events::MouseEvent e){
            	HX_STACKFRAME(&_hx_pos_ae4239bd2e271784_72_rulesButtonClick)
HXDLIN(  72)		this->rulesButtonIsPressed = true;
            	}


HX_DEFINE_DYNAMIC_FUNC1(StartScreen_obj,rulesButtonClick,(void))

bool StartScreen_obj::get_rulesButtonIsPressed(){
            	HX_STACKFRAME(&_hx_pos_ae4239bd2e271784_76_get_rulesButtonIsPressed)
HXDLIN(  76)		return this->rulesButtonIsPressed;
            	}


HX_DEFINE_DYNAMIC_FUNC0(StartScreen_obj,get_rulesButtonIsPressed,return )

void StartScreen_obj::reset(){
            	HX_STACKFRAME(&_hx_pos_ae4239bd2e271784_79_reset)
HXLINE(  80)		this->rulesButtonIsPressed = false;
HXLINE(  81)		this->startButtonIsPressed = false;
            	}


HX_DEFINE_DYNAMIC_FUNC0(StartScreen_obj,reset,(void))

bool StartScreen_obj::get_startButtonIsPressed(){
            	HX_STACKFRAME(&_hx_pos_ae4239bd2e271784_85_get_startButtonIsPressed)
HXDLIN(  85)		return this->startButtonIsPressed;
            	}


HX_DEFINE_DYNAMIC_FUNC0(StartScreen_obj,get_startButtonIsPressed,return )


hx::ObjectPtr< StartScreen_obj > StartScreen_obj::__new(int width,int height, ::Main main) {
	hx::ObjectPtr< StartScreen_obj > __this = new StartScreen_obj();
	__this->__construct(width,height,main);
	return __this;
}

hx::ObjectPtr< StartScreen_obj > StartScreen_obj::__alloc(hx::Ctx *_hx_ctx,int width,int height, ::Main main) {
	StartScreen_obj *__this = (StartScreen_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(StartScreen_obj), true, "StartScreen"));
	*(void **)__this = StartScreen_obj::_hx_vtable;
	__this->__construct(width,height,main);
	return __this;
}

StartScreen_obj::StartScreen_obj()
{
}

void StartScreen_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(StartScreen);
	HX_MARK_MEMBER_NAME(startButton,"startButton");
	HX_MARK_MEMBER_NAME(startButtonIsPressed,"startButtonIsPressed");
	HX_MARK_MEMBER_NAME(rulesButton,"rulesButton");
	HX_MARK_MEMBER_NAME(rulesButtonIsPressed,"rulesButtonIsPressed");
	HX_MARK_MEMBER_NAME(backGround,"backGround");
	HX_MARK_MEMBER_NAME(sizeWidth,"sizeWidth");
	HX_MARK_MEMBER_NAME(sizeHeight,"sizeHeight");
	HX_MARK_MEMBER_NAME(main,"main");
	 ::openfl::display::Sprite_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void StartScreen_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(startButton,"startButton");
	HX_VISIT_MEMBER_NAME(startButtonIsPressed,"startButtonIsPressed");
	HX_VISIT_MEMBER_NAME(rulesButton,"rulesButton");
	HX_VISIT_MEMBER_NAME(rulesButtonIsPressed,"rulesButtonIsPressed");
	HX_VISIT_MEMBER_NAME(backGround,"backGround");
	HX_VISIT_MEMBER_NAME(sizeWidth,"sizeWidth");
	HX_VISIT_MEMBER_NAME(sizeHeight,"sizeHeight");
	HX_VISIT_MEMBER_NAME(main,"main");
	 ::openfl::display::Sprite_obj::__Visit(HX_VISIT_ARG);
}

hx::Val StartScreen_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"main") ) { return hx::Val( main ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"reset") ) { return hx::Val( reset_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"sizeWidth") ) { return hx::Val( sizeWidth ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"backGround") ) { return hx::Val( backGround ); }
		if (HX_FIELD_EQ(inName,"sizeHeight") ) { return hx::Val( sizeHeight ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"startButton") ) { return hx::Val( startButton ); }
		if (HX_FIELD_EQ(inName,"rulesButton") ) { return hx::Val( rulesButton ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"startButtonOut") ) { return hx::Val( startButtonOut_dyn() ); }
		if (HX_FIELD_EQ(inName,"rulesButtonOut") ) { return hx::Val( rulesButtonOut_dyn() ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"startButtonOver") ) { return hx::Val( startButtonOver_dyn() ); }
		if (HX_FIELD_EQ(inName,"rulesButtonOver") ) { return hx::Val( rulesButtonOver_dyn() ); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"startButtonClick") ) { return hx::Val( startButtonClick_dyn() ); }
		if (HX_FIELD_EQ(inName,"rulesButtonClick") ) { return hx::Val( rulesButtonClick_dyn() ); }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"startButtonIsPressed") ) { return hx::Val( startButtonIsPressed ); }
		if (HX_FIELD_EQ(inName,"rulesButtonIsPressed") ) { return hx::Val( rulesButtonIsPressed ); }
		break;
	case 24:
		if (HX_FIELD_EQ(inName,"get_rulesButtonIsPressed") ) { return hx::Val( get_rulesButtonIsPressed_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_startButtonIsPressed") ) { return hx::Val( get_startButtonIsPressed_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val StartScreen_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"main") ) { main=inValue.Cast<  ::Main >(); return inValue; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"sizeWidth") ) { sizeWidth=inValue.Cast< int >(); return inValue; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"backGround") ) { backGround=inValue.Cast<  ::BackGround >(); return inValue; }
		if (HX_FIELD_EQ(inName,"sizeHeight") ) { sizeHeight=inValue.Cast< int >(); return inValue; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"startButton") ) { startButton=inValue.Cast<  ::Button >(); return inValue; }
		if (HX_FIELD_EQ(inName,"rulesButton") ) { rulesButton=inValue.Cast<  ::Button >(); return inValue; }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"startButtonIsPressed") ) { startButtonIsPressed=inValue.Cast< bool >(); return inValue; }
		if (HX_FIELD_EQ(inName,"rulesButtonIsPressed") ) { rulesButtonIsPressed=inValue.Cast< bool >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void StartScreen_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("startButton",f4,bf,c6,51));
	outFields->push(HX_("startButtonIsPressed",44,d1,9b,fb));
	outFields->push(HX_("rulesButton",49,0d,6d,90));
	outFields->push(HX_("rulesButtonIsPressed",4f,b1,fd,f6));
	outFields->push(HX_("backGround",0e,08,b2,5a));
	outFields->push(HX_("sizeWidth",85,29,f9,c8));
	outFields->push(HX_("sizeHeight",88,a3,5a,c7));
	outFields->push(HX_("main",39,38,56,48));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo StartScreen_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*  ::Button */ ,(int)offsetof(StartScreen_obj,startButton),HX_("startButton",f4,bf,c6,51)},
	{hx::fsBool,(int)offsetof(StartScreen_obj,startButtonIsPressed),HX_("startButtonIsPressed",44,d1,9b,fb)},
	{hx::fsObject /*  ::Button */ ,(int)offsetof(StartScreen_obj,rulesButton),HX_("rulesButton",49,0d,6d,90)},
	{hx::fsBool,(int)offsetof(StartScreen_obj,rulesButtonIsPressed),HX_("rulesButtonIsPressed",4f,b1,fd,f6)},
	{hx::fsObject /*  ::BackGround */ ,(int)offsetof(StartScreen_obj,backGround),HX_("backGround",0e,08,b2,5a)},
	{hx::fsInt,(int)offsetof(StartScreen_obj,sizeWidth),HX_("sizeWidth",85,29,f9,c8)},
	{hx::fsInt,(int)offsetof(StartScreen_obj,sizeHeight),HX_("sizeHeight",88,a3,5a,c7)},
	{hx::fsObject /*  ::Main */ ,(int)offsetof(StartScreen_obj,main),HX_("main",39,38,56,48)},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *StartScreen_obj_sStaticStorageInfo = 0;
#endif

static ::String StartScreen_obj_sMemberFields[] = {
	HX_("startButton",f4,bf,c6,51),
	HX_("startButtonIsPressed",44,d1,9b,fb),
	HX_("rulesButton",49,0d,6d,90),
	HX_("rulesButtonIsPressed",4f,b1,fd,f6),
	HX_("backGround",0e,08,b2,5a),
	HX_("sizeWidth",85,29,f9,c8),
	HX_("sizeHeight",88,a3,5a,c7),
	HX_("main",39,38,56,48),
	HX_("startButtonOver",68,87,e9,e7),
	HX_("startButtonOut",fa,08,3f,6f),
	HX_("startButtonClick",b4,d7,04,15),
	HX_("rulesButtonOver",3d,a3,49,3d),
	HX_("rulesButtonOut",c5,fe,f5,79),
	HX_("rulesButtonClick",3f,16,bd,73),
	HX_("get_rulesButtonIsPressed",d8,ce,99,39),
	HX_("reset",cf,49,c8,e6),
	HX_("get_startButtonIsPressed",cd,ee,37,3e),
	::String(null()) };

hx::Class StartScreen_obj::__mClass;

void StartScreen_obj::__register()
{
	StartScreen_obj _hx_dummy;
	StartScreen_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("StartScreen",4e,31,76,a3);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(StartScreen_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< StartScreen_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = StartScreen_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = StartScreen_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

